/*UPDATE THE SAVER OBJECT ALSO WHEN UPDATING THIS SCRIPT*/global.accountsock=tcpconnect(IP_ADDRESS,ACCOUNT_TCP,true);if (global.accountsock<=0){  return (false);}var _MAC,_IDENT;_MAC=global._macval;global._macval=round(random(1000000));_IDENT=getIdentity();clearbuffer();writebyte(3);writedouble(VERSION);writestring(argument0);writestring(md5string(argument1));writeudecint(global.startx);writedecshort(global.starty);writeushort(global.hp);writeushort(global.energy);writebyte(global.baseSTR);writebyte(global.baseAGI);writebyte(global.baseINT);writebyte(global.baseVIT);writebyte(global.team);writedouble(global.experience);writebyte(global.level);writebyte(global.class);writeushort(global.statpoints);writeushort(global.skillpoints);writeushort(global.myweapon);writeushort(global.myhat);writeushort(global.myarmor);writeushort(global.myaccesory1);writeushort(global.myaccesory2);writedouble(global.money);writebyte(ds_list_size(global.itemList));for (i=1; i<=ds_list_size(global.itemList); i+=1){  writeushort(ds_list_find_value(global.itemList,i-1));}writeushort(ds_list_size(global.skillList));for (i=1; i<=ds_list_size(global.skillList); i+=1){  writeushort(ds_list_find_value(global.skillList,i-1));}writeushort(ds_list_size(global.questList));for (i=1; i<=ds_list_size(global.questList); i+=1){  writeushort(ds_list_find_value(global.questList,i-1));}writestring(_MAC);writestring(_IDENT);bufferencrypt(global.encryptKey+string(game_id));sendmessage(global.accountsock);var _time,_received,_done;_time=current_time+10000;_received=false;_done=false;while ((_time>current_time) and (_done==false)){  size=receivemessage(global.accountsock);  if (size>=0)  {    if (size==0)    {            return (false);    }    bufferdecrypt(global.encryptKey+string(game_id));        messid=readbyte();    switch(messid)    {                  case 2:      {        show_message(readstring());        _done=true;      } break;      case 3:      {        _received=true;        _done=true;      } break;    }  }}closesocket(global.accountsock);return(_received);