if ((attack_ready==true) && (argument7<=global.energy)){  view_object[0]=Player;  var attackobj;  sprite_index=argument0;  image_index=0;    if (sprite_index==punch_right)  {    sprite_speed=.4;    attack_ready=false;    alarm[2]=round(((image_number/sprite_speed)+14)*global.attackSpeed);      }    else if (sprite_index==kick_right)  {    sprite_speed=.3;    attack_ready=false;    alarm[2]=round(((image_number/sprite_speed)+25)*global.attackSpeed);      }     else if (sprite_index==spinKick_right)  {    sprite_speed=.45;    attack_ready=false;    alarm[2]=round(((image_number/sprite_speed)+15)*global.attackSpeed);      }    else if (global.myweapon==0)  {    sprite_speed=.5;  }    else  {    sprite_speed=item_info(global.myweapon,ITEM_SPRITE_SPEED);    attack_ready=false;    alarm[2]=round(((image_number/sprite_speed)+item_info(global.myweapon,ITEM_REUSE))*global.attackSpeed);  }  if (alarm[2]<ceil(image_number/sprite_speed))  {    alarm[2]=ceil(image_number/sprite_speed);  }  client_send_sprite(false);    if (right==true)  {    attackobj=instance_create(round((bbox_left+bbox_right)/2)+argument3,floor(y)+round((bbox_bottom-y)/2)-round(argument2/2)+argument4,attack);  }  else  {    attackobj=instance_create(round((bbox_left+bbox_right)/2)-argument1-argument3,floor(y)+round((bbox_bottom-y)/2)-round(argument2/2)+argument4,attack);  }  attackobj.image_xscale=argument1;  attackobj.image_yscale=argument2;  attackobj.alarm[0]=argument5+ceil((argument10/sprite_speed)/**global.attackSpeed*/);  attackobj.damage=damage_calculate_deal(argument6);  attackobj.daze=argument8;  attackobj.sound=argument9;  if (argument10>0)  {    attackobj.alarm[1]=ceil((argument10/sprite_speed)/**global.attackSpeed*/);  }  else  {    attackobj.active=true;  }  attackobj.horizKnock=round(argument11*global.knockBonus);  attackobj.vertKnock=round(argument12*global.knockBonus);  attackobj.hits=argument13;  set_energy(global.energy-argument7);  alarm[7]=global.energyRegenTime;}
